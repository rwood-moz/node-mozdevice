var Command = require('./command');
var debug = require('debug')('mozdevice:util');

/**
 * Miscella
 * @param device
 * @constructor
 */
var Util = function(device) {
  this.serial = device.serial;
};

/**
 * Reboot the device and fetch the device time at the moment it occurred
 * @returns {Promise}
 */
Util.prototype.reboot = function() {
  debug('Rebooting');

  return new Command()
    .env('DEVICETIME',
      "$(ANDROID_SERIAL=" + this.serial + " adb shell echo '$EPOCHREALTIME')")
    .and()
      .env('ANDROID_SERIAL', this.serial)
      .adb('reboot')
    .and()
      .env('ANDROID_SERIAL', this.serial)
      .adb('wait-for-device')
    .and()
      .echo('$DEVICETIME')
    .exec()
    .then(function(stdout) {
      // The time generated by EPOCHREALTIME is seconds, we need milliseconds
      return parseFloat(stdout.replace('\n', '')) * 1000;
    });
};

/**
 * Start and stop the B2G process on the device
 * @returns {Promise}
 */
Util.prototype.restartB2G = function() {
  debug('Restarting B2G');

  return new Command()
    .env('ANDROID_SERIAL', this.serial)
    .adbShell('stop b2g && start b2g')
    .exec();
};

/**
 * Kill a process or application with the specified PID
 * @param {number|string} pid
 * @returns {Promise}
 */
Util.prototype.kill = function(pid) {
  debug('Killing process %d', pid);

  return new Command()
    .env('ANDROID_SERIAL', this.serial)
    .adbShell('kill ' + pid)
    .exec();
};

module.exports = Util;